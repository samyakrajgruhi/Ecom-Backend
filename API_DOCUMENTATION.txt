=================================================
E-COMMERCE API DOCUMENTATION
=================================================

PRODUCTS
--------
GET /products
  • Returns list of all available products

GET /products/:id
  • Returns specific product details by ID

CART
----
GET /cart-items
  • Returns current shopping cart contents
  • Optional query parameter: ?expand=product (includes full product details)

POST /cart-items
  • Adds product to cart
  • Required body:

   { 
      "productId": "string", 
      "quantity": number 
   }

  • If product already in cart, increases quantity

PUT /cart-items/:productId
  • Updates cart item
  • Body options: 
   { 
      "quantity": number, 
      "deliveryOptionId": "string" 
   }

DELETE /cart-items/:productId
  • Removes product from cart

DELIVERY OPTIONS
---------------
GET /delivery-options
  • Returns available shipping methods

ORDERS
------
GET /orders
  • Returns order history
  • Optional query parameter: ?expand=product (includes full product details) 

GET /orders/:id
  • Returns specific order by ID
  • Optional query parameter: ?expand=products (includes full product details)

POST /orders
  • Creates new order from cart items
  • Required body: 
   { 
      "cart": 
      [
         { 
            "productId": "string", 
            "quantity": number, 
            "deliveryOptionId": "string" 
         }
      ]
   }
  • Automatically empties cart after successful order

DELETE /orders/:id
  • Cancels/deletes an order

SYSTEM
------
POST /reset
  • Resets database to default state
  • Warning: Deletes all user data

=================================================
USAGE EXAMPLE
=================================================

1. View products:    GET /products
2. Add to cart:      POST /cart-items 
                     { "productId": "e43638ce-6aa0-4b85-b27f-e1d07eb678c6", "quantity": 2 }
3. View cart:        GET /cart-items?expand=product
4. Update shipping:  PUT /cart-items/e43638ce-6aa0-4b85-b27f-e1d07eb678c6
                     { "deliveryOptionId": "2" }
5. Place order:      POST /orders
                     { "cart": [...contents of GET /cart-items response...] }
6. View orders:      GET /orders
